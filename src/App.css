:root
{
  --white: #DDD;
  --gray2: #BBB;
  --gray1: #999;
  --black2: #1b1b1b;
  
  --house-gap: 1vw;
  --square-font-size: calc( 1rem + 10 * ((100vw - 1024px) / 1024) );
  --square-border-size: calc( 2.7px + 2 * ((100vw - 1024px) / 1024) );
  --input-button-size: 2.8vw;
  
  --mobile-house-gap: 1.5vw;
  --mobile-house-size: min( 25vw, calc(55vh / 3 - var(--mobile-house-gap)) );
  --mobile-square-border-size: max(2px, calc(1vw / 2));
  --mobile-square-font-size: calc( var(--mobile-house-size) / 3 - 1rem);
  --mobile-input-pad-height: 30vh;
  --mobile-input-button-height: calc(var(--mobile-input-pad-height) / 4);
}

body 
{ 
  background-color: var(--black2);
  color: var(--white);
}

button
{
  background-color: var(--white);
  color: black;
}

button:hover, button:active
{
  background-color: var(--gray2);
}

/* ? button that opens tutorial pop-up */
/* and finish flag button that also activates a pop-up */
#Tutorial-Button, #Finish-Button
{
  --font-size: calc( var(--mobile-square-font-size) + 0.5rem );
  --button-dimensions: calc( var(--font-size) + 0.5rem );
  font-size: var(--font-size);
  width: var(--button-dimensions);
  height: var(--button-dimensions);

  position: fixed;
  top: calc(10vh - var(--button-dimensions) - 0.7rem);

  color: var(--white);
  font-weight: bold;
  border: solid var(--white);
  background-color: transparent;
}

/* positioning for mobile */
#Tutorial-Button
{
  right: 1em;
}
#Finish-Button
{
  right: calc(2rem + var(--button-dimensions));
}

/* this is the finish-flag.svg */
#Finish-Button img
{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#Tutorial-Button:hover, #Tutorial-Button:active, #Finish-Button:hover, #Finish-Button:active
{
  color: var(--gray1);
  border-color: var(--gray1);
}

#Finish-Button:hover img, #Finish-Button:active img
{
  filter: invert(72%) sepia(2%) saturate(0%) hue-rotate(327deg) brightness(100%) contrast(0%);
}
/* NOTE: format finish button for mobile */

/*  tool-tips for the menu buttons */
#Tutorial-Tool-Tip, #Finish-Tool-Tip
{
  visibility: hidden;

  position: absolute;
  top: 115%;

  padding: calc( var(--font-size) / 5 );
  background-color: var(--white);
  
  color: var(--black2);
  font-size: calc(var(--font-size) / 4);
  white-space: nowrap;
}

#Tutorial-Tool-Tip
{
  right: -2px;
}

#Finish-Tool-Tip
{
  left: -2px;
}

/* make tool tips visible upon hover */
#Tutorial-Button:hover #Tutorial-Tool-Tip, #Finish-Button:hover #Finish-Tool-Tip
{
  visibility: visible;
}


@media screen and (max-width: 1023px)
{
  #Tutorial-Button, #Finish-Button
  {
    border-width: var(--mobile-square-border-size);
  }
}

@media screen and (min-width: 1024px) 
{
  #Tutorial-Button, #Finish-Button
  {
    /* based off of #Title font-size is calc(1rem + 2vw) */
    font-size: calc(1rem + 1.2vw);
    --button-dimensions: calc(1.5rem + 1.2vw);
    width: var(--button-dimensions);
    height: var(--button-dimensions);

    /* top: calc( 7.5vh - (var(--button-dimensions) / 2) ); */
    /* top is padding-top + #Title font-size */
    top: calc(3vh + 1rem + 2vw - var(--button-dimensions) * 0.75);
    /* #Sudoku margin-right: 5% */
    right: calc(5% + 1rem);

    border-width: calc( var(--square-border-size) - 1px );
  }
  
  #Tutorial-Button
  {
    right: calc(5% + 1rem);
  }

  #Finish-Button
  {
    right: calc(5% + 2rem + var(--button-dimensions));
  }
}

/* styling the pop-up containers */
/* #Tutorial-Pop-Up, #Finish-Pop-Up,  */
.popup
{
  --popup-width: 50vw;
  --popup-height: 50vh;
  
  width: var(--popup-width);
  height: var(--popup-height);

  /* fix container to horizontal and vertical center */
  position: fixed;
  left: calc( (100vw - var(--popup-width)) / 2 );
  top: calc( (100vh - var(--popup-height)) / 2 );

  overflow: auto;
  color: var(--white);

  border: 1.5px solid var(--white);
  background: #1b1b1b;

  z-index: 1000;
}

/* #X-Button */
.x-button
{
  position: absolute; /* for IE */
  
  position: -webkit-sticky; /* for Safari */
  position: sticky;
  top: 0.25rem;

  /* width and padding adjustments format the x into the corner of the pop-up! */
  width: 100%;
  padding: 0 0 0 calc(100% - 2ex);
  margin: 0;

  background-color: transparent;
  border: none;
  
  color: var(--white);
  font-size: 1.5rem;
  line-height: 1ex;
  font-weight: bold;

  z-index: 100;
}

/* #X-Button:hover */
.x-button:hover, .x-button:active
{
  color: var(--gray1);
  background-color: transparent;
}

#Opaque-Screen
{
  position: fixed;
  top: 0;
  width: 100vw;
  height: 100vh;

  background-color: #1b1b1b99;

  z-index: 1000;
}

/* #Play-Button */
.popup-primary-button, .popup-secondary-button
{
  margin-bottom: 1.5rem;
  padding: 0.3rem 1.2rem 0.3rem 1.2rem;
  border: 1.5px solid var(--black2);
  
  z-index: 10;
}

/* #Play-Button:hover */
.popup-primary-button:hover, .popup-primary-button:active
{
  background-color: var(--gray2);
}

.popup-secondary-button
{
  padding: calc(0.3rem - 2px) 1.2rem calc(0.3rem - 2px) 1.2rem;
  color: var(--white);
  border-color: var(--white);
  background-color: transparent;
}

.popup-secondary-button:hover, .popup-secondary-button:active
{
  color: var(--gray1);
  border-color: var(--gray1);
  background-color: transparent;
}

/* formatting the pop-up for mobile */
@media screen and (max-width: 1023px)
{
  #Tutorial-Pop-Up, #Finish-Pop-Up
  {
    --mobile-popup-width: 70vw;
    --mobile-popup-height: 70vh;
    width: var(--mobile-popup-width);
    height: min( auto, var(--mobile-popup-height) );

    left: calc( (100vw - var(--mobile-popup-width)) / 2 );
    top: calc( (100vh - var(--mobile-popup-height)) / 2 );
  }

  /* #X-Button */
  .x-button
  {
    font-size: 2rem;
  }
}

/* styling the pop-up copy */
#Tutorial-Pop-Up > h2
{
  margin-top: -0.5rem;
  margin-bottom: 0;
}

#Tutorial-Pop-Up > h2, 
#Tutorial-Pop-Up > p,
#Tutorial-Pop-Up > ul
{
  text-align: left;
  padding-left: 1rem;
  padding-right: 1rem;
}

#Tutorial-Pop-Up > ul
{
  padding-left: 2rem;
}

#Tutorial-Pop-Up > li:last-child
{
  margin-bottom: 0;
  padding-bottom: 0;
}

/****************************************************************/
/* Style and format the main sections in relation to each other */
/****************************************************************/
#Sudoku, #Game-Board, #Input-Pad
{
  border: none;
}

#Sudoku 
{
  /* side gutters */
  margin-left: 5%; 
  margin-right: 5%;
  padding: 0;

  display: grid;
}

#Title
{
  grid-area: title;
  text-align: center;
  margin-top: -1px;
}

#Game-Board
{
  grid-area: board;
  margin: -1px;

  /* background-color: teal; */
}

#Input-Pad
{
  grid-area: input;
  margin: -1px;

  /* background-color: red; */
}

/* desktop format */
@media screen and (min-width: 1024px)
{
  #Sudoku
  {
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: auto;
    grid-template-areas: 
      '..... title title title .....'
      'board board board input input'
      'board board board input input'
      'board board board input input'
    ;
    
    margin-top: 0;
  }
}

/* mobile & tablet format */
@media screen and (max-width: 1023px) 
{
  #Sudoku
  {
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: auto;
    grid-template-areas:
    'title title title title title'
    'board board board board board'
    'board board board board board'
    '..... input input input .....'
    '..... input input input .....'
    ;
  }

  #Title
  {
    height: 10vh;
    color: var(--white);
    text-align: left;
  }
  #Game-Board
  {
    height: 55vh;
  }
  #Input-Pad
  {
    height: var(--mobile-input-pad-height);
  }
}

/****************************************/
/* Style and format the Sudoku board    */
/* starting with the 3x3 grid of houses */
/****************************************/
#Game-Board 
{
  display: grid;
}

/* desktop format */
@media screen and (min-width: 1024px)
{
  #Title
  {
    /* Default H1 font-size is 2rem && 40px */
    font-size: calc(1rem + 2vw);

    padding-top: 0.5rem;
    padding-top: 3vh;
    /* Height: font-size + 1.5rem + 0.5vh */
    height: calc(1rem + 2vw + 1.5rem + 0.5vh);
    /* line thickness scale with screensize, bc it seemed to get thinner as the screen got larger */
    border-bottom: calc( 2px + 2 * ((100vw - 1024px) / 1024) ) #999 solid;
  }

  #Game-Board
  {
    padding-left: 25%;
    padding-right: 10%;
    justify-content: right;
  }
}

/* mobile & tablet format */
@media screen and (max-width: 1023px)
{
  #Title
  {
    margin-bottom: 0;
    padding: 0;
    line-height: 10vh;

    font-size: min( calc(1.5rem + 3.5vw), 6vh );

    border-bottom:2px solid var(--gray1);
  }

  #Game-Board
  {
    justify-content: center;
    padding: 0;
  }
}

.House-Row 
{
  display: flex;

  margin: var(--house-gap) 0 0 0;
  padding: 0;
  
  /* For dev */
  /* border: 1px solid yellow;
  padding: 10px;
  margin-top: -1px; */
}

/* balance bottom row margin with top House Row */
.House-Row:last-child 
{
  /* margin-bottom: 10px; */
  margin-bottom: var(--house-gap);
}

/*******************************/
/* Style and format the houses */
/*******************************/
.House 
{
  /* border: 1px solid #FFF; */
  /* border: 1px solid red; */
  margin: 0 0 0 var(--house-gap);
  /* width: 150px;
  height: 150px; */
  /* width: 7rem;
  height: 7rem; */
  width: 10.5vw;
  height: 10.5vw;
}

/* balance right most houses's right side margin with de los demas */
.House:last-child 
{
  /* margin-right: 10px; */
  margin-right: var(--house-gap);
}

.Square-Row 
{
  display: flex;
  height: 33%;
}

@media screen and (max-width: 1023px)
{
  #Game-Board
  {
    display: flex;
    flex-direction: column;
  }

  .House-Row
  {
    margin: var(--mobile-house-gap) 0 0 0;
    padding: 0;
    /* border: 1px solid red; */

    display: flex;
    justify-content: center;
  }

  .House-Row:last-child
  {
    margin-bottom: 0;
  }

  .House
  {
    margin: 0 0 0 var(--mobile-house-gap);

    /* House size will ideally be 25vw but never exceed 
    1/3 of #Game-Board height so that it stays within bounds */
    width: var(--mobile-house-size);
    height: var(--mobile-house-size);
  }

  .House:last-child
  {
    margin-right: var(--mobile-house-gap);
  }

  .Square-Row
  {
    height: 33%.33;
    padding: 0;
    margin-bottom: calc(1px - ( (1023 - 100vh) / (1023 - 410) / 2));
  }
}

/* adding this rule because something weird happens */
@media screen and (min-width: 410px) and (max-width: 1023px)
{
  .Square-Row
  {
    margin-bottom: calc(1px - ( (1023 - 100vw) / (1023 - 410) / 2));
  }
}

/****************************************************************/
/* the following styles are for the Sudoku squares in the board */
/****************************************************************/

/* these styles may be overriden by Css.tsx & Square.tsx */
.Square 
{
  /* border: solid 1px #555; */
  border: ridge var(--square-border-size) #999999FF;
  margin: 0px;
  width: 30%;
  height: 88%;

  display: flex;
  flex-wrap: wrap;
}

@media screen and (max-width: 1023px)
{
  .Square
  {
    border-width: var(--mobile-square-border-size); 
    height: calc(100% - 2 * var(--mobile-square-border-size)); /* this calc is the pinnacle of my web dev career */
  }
}

/*************************************************************************************/
/* usually targets the disabled squares that are loaded in to the puzzle or solution */
/* when squares are disabled, they are <ul>                                          */
/* when squares are editable, they are <input>                                       */
/*************************************************************************************/

/* it turns out that <ul> is extremely resistant to spacial formatting >:( */
/* and doesn't respond to flex box, text-align, or vertical alignment      */
.Square > ul
{
  list-style-type: none;

  margin: auto; /* this also centers vertical alignment for some reason */
  padding: 0; /* removing all padding horizontally centers */

  border: none;

  font-size: var(--square-font-size);
} 

.Square > input 
{
  align-self: center; /* vertical center per flex-box */
  margin: auto; /* horizontal center alignment */
  padding: 0;
  text-align: center;

  width: 100%; 
  height: 100%;

  border: none;
  background-color: #FFFFFF21;
  color: var(--white);

  font-size: var(--square-font-size);
}

@media screen and (max-width: 767px)
{
  .Square > input, .Square > ul 
  {
    font-size: var(--mobile-square-font-size);
  }
}

@media screen and (min-width: 768px) and (max-width: 1023px)
{
  .Square > input, .Square > ul 
  {
    font-size: calc( var(--mobile-square-font-size) - 0.5rem );
  }
}

.Square > input:focus
{
  border: none;
  background-color: #FFFFFF66;
  color: var(--white);
}

.Square > input:focus-visible
{
  outline: none;
}

/****************************************************/
/* for the annotation feature                       */
/* <Square> currently only uses <ul> or <input>     */
/* however, for annotation mode, <p> should be used */
/****************************************************/
.Square > p 
{
  font-size: 0.5rem;
  margin: 0;
  width: 33%;
}

/**************************************************/
/* following style is for the numerical input pad */
/**************************************************/

#Input-Pad > button
{
  color: #000;
  border: 1.5px solid black;
  background-color: var(--white);
}

#Input-Pad > button:hover, #Input-Pad > button:active
{
  background-color: var(--gray2);
}

/* desktop format for input pad */
@media screen and (min-width: 1024px)
{
  #Input-Pad 
  {
    display: grid;
    /* grid-template-columns:  repeat(3, 2.5rem) 1fr;
    grid-template-rows: 1fr repeat(3, 2.5rem) 2rem 1fr; */
    grid-template-columns:  repeat( 3, var(--input-button-size) ) 1fr;
    grid-template-rows: 1fr repeat( 4, var(--input-button-size) ) 1fr;
    grid-template-areas:
      '.....  .....  .....  .'
      'one    two    three  .'
      'four   five   six    .'
      'seven  eight  nine   .'
      'clear  clear  clear  .'
      '.....  .....  .....  .'
    ;
  }

  #Input-Pad > button
  {
    /* font-size: 1rem; */
    font-size: 1.7vw;
  }
}

/* mobile & tablet format for input pad */
@media screen and (max-width: 1023px)
{
  #Input-Pad
  {
    display: grid;
    grid-template-columns: 1fr repeat(3, 18vw) 1fr;
    grid-template-rows: 1fr repeat( 4, min(12vw, var(--mobile-input-button-height)) );
    grid-template-areas:
    '..... ..... ..... ..... .....'
    '..... one   two   three .....'
    '..... four  five  six   .....'
    '..... seven eight nine  .....'
    '..... clear clear clear .....'
    ;

    position: fixed;
    /* margins */
    bottom: 2vh;
    left: 2vw;
    right: 2vw;

    width: 96vw;

    margin: 0;
    padding: 0;
  }

  #Input-Pad > button
  {
    font-size: min( 6.5vw, calc( var(--mobile-input-button-height) - 1rem) );
  }
}

/***************************************************************************/
/* The following styles are for the test strip. Only available in dev mode */
/***************************************************************************/
#Test-Strip
{
  display: flex;
  justify-content: center;
  flex-wrap: wrap;

  column-gap: 2rem;
  margin-bottom: 1rem;
  padding: 0.5rem 0rem 0.5rem 0rem;

  border: 1px solid red;
}

#Test-Strip button
{
  align-self: center;
  padding: 0.4rem 0.6rem 0.4rem 0.6rem;
}

#Test-Strip > form
{
  background-color: red;
}

#Test-Strip > form > label
{
  font-size: 0.8rem;
}

#test-input
{
  /*display: 'none',       /* doesn't take up space */
  /*visibility: 'hidden',  /* takes up space */
  border: 3px solid white;
  background-color: rgba(255, 255, 255, 0);
  color: white;
  
  align-self: center;
  margin-top: 0.2rem;
  margin-bottom: 1rem;
  height: 50%;
  width: 2rem;
  
  text-align: center;
}

#test-input:focus
{
  border: 3px dotted white;
  background-color: black;
}
/* 
  documentation on :focus vs :focus-visible 
  https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
*/
#test-input:focus-visible
{
  outline: none;
}

/***************************************************/
/* .Button-Section was used to style the tutorials */
/* I followed and that are in Additions.tsx        */
/***************************************************/
.Button-Section {
  color: #FFFFFF;
}

/***********************************************************/
/* Everything past this point was included in the template */
/***********************************************************/
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}